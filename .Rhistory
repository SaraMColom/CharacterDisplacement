y.grob <- textGrob("Relative Fitness",
gp=gpar(col="black", fontsize=25), rot=90)
# Common x title
x.grob <- textGrob("Phenotypic Distance",
gp=gpar(col="black", fontsize=25), rot=0)
BothRegress<-plot_grid( RegressError1,RegressError2,align='vh', vjust=1, scale = 1,labels = "AUTO",label_size = 18,label_x=c(0.09),label_y=c(0.95))
grid.arrange(arrangeGrob(BothRegress, left = y.grob,bottom=x.grob))
ggplot()+
#geom_point(data=BothFit,aes(PhenDist_PCA2,SeedResiduals,color=Outlier),size=5,alpha=0.2)+
geom_point(data=AveragePhenoDist2,aes(PhenDist_PCA2,SeedResiduals,color=Outlier),size=5,alpha=0.5)+
geom_smooth(data=AveragePhenoDist2,aes(PhenDist_PCA2,SeedResiduals),color="red",method="lm",size=1.2,se=F,linetype="dashed",fullrange=TRUE)+
geom_errorbar(data=AveragePhenoDist2,aes(x=PhenDist_PCA2,ymin=SeedResiduals-FitSE,ymax=SeedResiduals+FitSE))+
geom_errorbarh(data=AveragePhenoDist2,aes(y=SeedResiduals,xmin=PhenDist_PCA2-PhenDist_PCA2_SE,xmax=PhenDist_PCA2+PhenDist_PCA2_SE))+
#geom_abline(slope=-0.0444,intercept = -0.0311,linetype="dashed",color="orange",size=1.5)+
#geom_abline(slope=0.0019,intercept = 0.1071,linetype="dashed",color="orange",size=1.5)+
#geom_smooth(data=AveragePhenoDist, aes(PhenDist_PCA2,SeedResiduals),method = lm, formula = y ~ log(x) , se =TRUE,fullrange=TRUE,color="blue")+
theme_classic()+
scale_color_manual(values = c("black","blue","gold"))+
theme_classic()+
ylab(" ")+
xlab(" ")+
ggtitle("Root Architecture")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1,color="black"))+
theme(axis.text.y = element_text(color="black"))+
theme(plot.title=element_text(size=25,hjust=0.5))+
theme(legend.position = "none")
# Plot CI based on raw points
RegressError1<-ggplot()+
#geom_point(data=BothFit,aes(PhenDist_PCA2,SeedResiduals,color=Outlier),size=5,alpha=0.2)+
geom_point(data=AveragePhenoDist2,aes(PhenDist_PCA2,SeedResiduals,color=Outlier),size=5,alpha=0.5)+
geom_smooth(data=AveragePhenoDist2,aes(PhenDist_PCA2,SeedResiduals),color="red",method="lm",size=1.2,se=F,linetype="dashed",fullrange=TRUE)+
geom_errorbar(data=AveragePhenoDist2,aes(x=PhenDist_PCA2,ymin=SeedResiduals-FitSE,ymax=SeedResiduals+FitSE))+
geom_errorbarh(data=AveragePhenoDist2,aes(y=SeedResiduals,xmin=PhenDist_PCA2-PhenDist_PCA2_SE,xmax=PhenDist_PCA2+PhenDist_PCA2_SE))+
#geom_abline(slope=-0.0444,intercept = -0.0311,linetype="dashed",color="orange",size=1.5)+
#geom_abline(slope=0.0019,intercept = 0.1071,linetype="dashed",color="orange",size=1.5)+
#geom_smooth(data=AveragePhenoDist, aes(PhenDist_PCA2,SeedResiduals),method = lm, formula = y ~ log(x) , se =TRUE,fullrange=TRUE,color="blue")+
theme_classic()+
scale_color_manual(values = c("black","blue","gold"))+
theme_classic()+
ylab(" ")+
xlab(" ")+
ggtitle("Root Architecture")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1,color="black"))+
theme(axis.text.y = element_text(color="black"))+
theme(plot.title=element_text(size=25,hjust=0.5))+
theme(legend.position = "none")
BothRegress<-plot_grid( RegressError1,RegressError2,align='vh', vjust=1, scale = 1,labels = "AUTO",label_size = 18,label_x=c(0.09),label_y=c(0.95))
grid.arrange(arrangeGrob(BothRegress, left = y.grob,bottom=x.grob))
ggplot(pcFamilyMeans%>%filter(Trt=="Alone"))+
geom_point(aes(PCA4, SeedNumberResid),size=5,alpha=0.5)+
scale_color_manual(values=c("red","black"))+
stat_smooth(aes(PCA4, SeedNumberResid),alpha=0.5,method="lm", formula=y~x,se=F,fullrange = T)+
#scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("Relative fitness")+
xlab("Root morphology (PC4)")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
labs(color = "Treatment")+
theme(legend.text=element_text(size=12),legend.title=element_text(size=12),legend.position = 'top',
legend.direction = "horizontal")
ggplot()+
geom_point(data=pcFamilyMeans%>%filter(Trt!="Alone"),aes(PCA4, SeedNumberResid,color=ML),size=5)+
#geom_point(data=IpPA4b%>%filter(Trt!="Alone"),aes(PCA4,SeedNumberResid,color=ML),alpha=0.2)+
#eom_abline(intercept = -0.0146,slope=-0.0164,linetype="dashed",color="orange")+
#geom_abline(intercept = 0.017,slope=-0.0023)+
scale_color_brewer(palette = "Paired")+
stat_smooth(data=pcFamilyMeans%>%filter(Trt!="Alone"),aes(PCA4, SeedNumberResid),alpha=0.5,method="lm", formula=y~x,se=F,fullrange = T)+
#scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("Relative fitness")+
xlab("Root morphology (PC4)")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
labs(color = "Treatment")+
theme(legend.text=element_text(size=12),legend.title=element_text(size=12),legend.position = 'top',
legend.direction = "horizontal")
View(pcFamilySE)
grep("PC",names(pcFamilySE))
colnames(pcFamilySE)[grep("PC",names(pcFamilySE))]<-paste(colnames(pcFamilySE)[grep("PC",names(pcFamilySE))],"_SE",sep="_")
View(pcFamilySE)
NAMES(FitMean)
names(Fitmean)
pcFamilyMeans<-merge(pcFamilyMeans,pcFamilySE)
FitStandError2<-aggregate(list(Fitmean[c( "SeedNumberResid")]),by=list(Fitmean$Trt,Fitmean$ML),FUN=std.error) #Estimate Standard Error
colnames(FitStandError2)<-c("Trt","ML","Fit_SE")
head(pcFamilyMeans)
pcFamilyMeans<-aggregate(list(IpPA4[c("PCA1","PCA2","PCA3","PCA4")]),by=list(IpPA4$Trt,IpPA4$ML),FUN=mean) #
pcFamilySE<-aggregate(list(IpPA4[c("PCA1","PCA2","PCA3","PCA4")]),by=list(IpPA4$Trt,IpPA4$ML),FUN=std.error) #
colnames(pcFamilyMeans)[1:2]<-c("Trt","ML")
colnames(pcFamilySE)[1:2]<-c("Trt","ML")
colnames(pcFamilySE)[grep("PC",names(pcFamilySE))]<-paste(colnames(pcFamilySE)[grep("PC",names(pcFamilySE))],"_SE",sep="_")
names(pcFamilySE)
pcFamilySE<-aggregate(list(IpPA4[c("PCA1","PCA2","PCA3","PCA4")]),by=list(IpPA4$Trt,IpPA4$ML),FUN=std.error) #
colnames(pcFamilyMeans)[1:2]<-c("Trt","ML")
colnames(pcFamilySE)[1:2]<-c("Trt","ML")
colnames(pcFamilySE)[grep("PC",names(pcFamilySE))]<-paste(colnames(pcFamilySE)[grep("PC",names(pcFamilySE))],"SE",sep="_")
for(i in c("PCA1","PCA2","PCA3","PCA4")){
Quadratic=pcFamilyMeans[i]*pcFamilyMeans[i]
pcFamilyMeans=cbind(pcFamilyMeans,Quadratic)
}
dim(pcFamilyMeans)
colnames(pcFamilyMeans)[7:10]<-paste(c("PCA1","PCA2","PCA3","PCA4"),"2",sep="_")
RelFitMean2<-aggregate(SeedNumberResid~ML+Trt,Fitmean,mean) # Average fitness by maternal line and treatment only
pcFamilyMeans<-merge(pcFamilyMeans,RelFitMean2)
PCAall=pcFamilyMeans
pcFamilyMeans<-merge(pcFamilyMeans,pcFamilySE)
FitStandError2<-aggregate(list(Fitmean[c( "SeedNumberResid")]),by=list(Fitmean$Trt,Fitmean$ML),FUN=std.error) #Estimate Standard Error
colnames(FitStandError2)<-c("Trt","ML","Fit_SE")
pcFamilyMeans<-merge(FitStandError2,pcFamilyMeans)
dim(pcFamilyMeans)
head(pcFamilyMeans)
ggplot()+
geom_point(data=pcFamilyMeans%>%filter(Trt!="Alone"),aes(PCA4, SeedNumberResid),size=5,alpha=0.5)+
geom_errorbar(aes(x=PCA4,ymin=SeedNumberResid-Fit_SE,ymax=SeedNumberResid+Fit_SE))+
geom_errorbarh(aes(y=SeedNumberResid,xmin=PCA4-PCA4_SE,xmax=PCA4+PCA4_SE))+
#geom_point(data=IpPA4b%>%filter(Trt!="Alone"),aes(PCA4,SeedNumberResid,color=ML),alpha=0.2)+
#eom_abline(intercept = -0.0146,slope=-0.0164,linetype="dashed",color="orange")+
#geom_abline(intercept = 0.017,slope=-0.0023)+
#scale_color_brewer(palette = "Paired")+
stat_smooth(data=pcFamilyMeans%>%filter(Trt!="Alone"),aes(PCA4, SeedNumberResid),alpha=0.5,method="lm", formula=y~x,se=F,fullrange = T,linetype="dashed",color="red")+
#scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("Relative fitness")+
xlab("Root morphology (PC4)")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
labs(color = "Treatment")+
theme(legend.text=element_text(size=12),legend.title=element_text(size=12),legend.position = 'top',
legend.direction = "horizontal")
ggplot(data=pcFamilyMeans%>%filter(Trt!="Alone"))+
geom_point(aes(PCA4, SeedNumberResid),size=5,alpha=0.5)+
geom_errorbar(aes(x=PCA4,ymin=SeedNumberResid-Fit_SE,ymax=SeedNumberResid+Fit_SE))+
geom_errorbarh(aes(y=SeedNumberResid,xmin=PCA4-PCA4_SE,xmax=PCA4+PCA4_SE))+
#geom_point(data=IpPA4b%>%filter(Trt!="Alone"),aes(PCA4,SeedNumberResid,color=ML),alpha=0.2)+
#eom_abline(intercept = -0.0146,slope=-0.0164,linetype="dashed",color="orange")+
#geom_abline(intercept = 0.017,slope=-0.0023)+
#scale_color_brewer(palette = "Paired")+
stat_smooth(data=pcFamilyMeans%>%filter(Trt!="Alone"),aes(PCA4, SeedNumberResid),alpha=0.5,method="lm", formula=y~x,se=F,fullrange = T,linetype="dashed",color="red")+
#scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("Relative fitness")+
xlab("Root morphology (PC4)")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
labs(color = "Treatment")+
theme(legend.text=element_text(size=12),legend.title=element_text(size=12),legend.position = 'top',
legend.direction = "horizontal")
ggplot(pcFamilyMeans%>%filter(Trt=="Alone"))+
geom_point(aes(PCA4, SeedNumberResid),size=5,alpha=0.5)+
geom_errorbar(aes(x=PCA4,ymin=SeedNumberResid-Fit_SE,ymax=SeedNumberResid+Fit_SE))+
geom_errorbarh(aes(y=SeedNumberResid,xmin=PCA4-PCA4_SE,xmax=PCA4+PCA4_SE))+
scale_color_manual(values=c("red","black"))+
stat_smooth(aes(PCA4, SeedNumberResid),alpha=0.5,method="lm", formula=y~x,se=F,fullrange = T,linetype="dashed",color="red")+
#scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("Relative fitness")+
xlab("Root morphology (PC4)")+
theme(axis.text.x = element_text(
size=20),
axis.text.y = element_text(
size=20),axis.title.y = element_text(size=20),
axis.title.x = element_text(
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
labs(color = "Treatment")+
theme(legend.text=element_text(size=12),legend.title=element_text(size=12),legend.position = 'top',
legend.direction = "horizontal")
Eco2<-rnorm(n = 50,sd = 2,mean = 400)
Eco2
Allocation<-Eco2*0.4+rnorm(n = 50,sd = 2,mean = 400)
FungalDiversity<-Allocation*0.0003+rnorm(n = 50,sd = 2,mean = 400)
libarary(plotly())
plot(Allocation,FungalDiversity)
FungalDiversity<-Allocation*0.0003+rnorm(n = 50,sd = 2,mean = 0.25)
Allocation<-Eco2*0.4+rnorm(n = 50,sd = 2,mean = 5)
plot(Allocation,FungalDiversity)
Allocation<-Eco2*0.4+rnorm(n = 50,sd = 1,mean = 5)
FungalDiversity<-Allocation*0.0003+rnorm(n = 50,sd = 1,mean = 0.25)
plot(Allocation,FungalDiversity)
PSF=FungalDiversity*0.04
plot(FungalDiversit,PSF)
plot(FungalDiversity,PSF)
PSF=FungalDiversity*0.04+rnorm(n = 50,sd = 1,mean = 0.05)
plot(FungalDiversity,PSF)
PSF=FungalDiversity*0.04+rnorm(n = 50,sd = 1,mean = 0.0001)
plot(FungalDiversity,PSF)
PSF=FungalDiversity*0.04+rnorm(n = 50,sd =0.5,mean = 0.0001)
plot(FungalDiversity,PSF)
PSF=FungalDiversity*0.04+rnorm(n = 50,sd =0.5,mean = 0.00001)
plot(FungalDiversity,PSF)
?plot_ly
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,size='PSF', color = '#BF382A')
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,size=PSF, color = '#BF382A')
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A')
fig <- fig %>% add_markers(size=PSF)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A',mode='marker',marker=list(size=PSF))
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A',type='scatter',mode='marker',marker=list(size=PSF))
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
?add_markers
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
PSF
summary(PSF)
PSF=FungalDiversity*0.04+abs(rnorm(n = 50,sd =0.5,mean = 0.00001))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle'))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = log(PSF), colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = sqrt(PSF), colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
FungalDiversity
FungalDiversity<-Allocation*0.0003+abs(rnorm(n = 50,sd = 1,mean = 0.25))
PSF=FungalDiversity*0.04+abs(rnorm(n = 50,sd =0.5,mean = 0.00001))
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
Allocation<-Eco2*0.4+abs(rnorm(n = 50,sd = 1,mean = 5))
Eco2<-abs(rnorm(n = 50,sd = 2,mean = 400))
Allocation<-Eco2*0.4+abs(rnorm(n = 50,sd = 1,mean = 5))
FungalDiversity<-Allocation*0.0003+abs(rnorm(n = 50,sd = 1,mean = 0.25))
PSF=FungalDiversity*0.04+abs(rnorm(n = 50,sd =0.5,mean = 0.00001))
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A')
fig <- fig %>% add_markers(,size='PSF')
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
?sample
seq(1,10)
seq(1,10,0.01)
seq(0,1,50)
1/50
seq(0,1,.02)
LENGTH(seq(0,1,.02))
length(seq(0,1,.02))
seq(0.01,1,.02)
length(seq(0.01,1,.02))
FungalDiversity<-Allocation*seq(0.01,1,.02)+(rnorm(n = 50,sd = 1,mean = 0.00025))
PSF=FungalDiversity*0.04+abs(rnorm(n = 50,sd =0.5,mean = 0.00001))
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A',size='PSF')
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
Allocation
Allocation<-Eco2*0.00004+abs(rnorm(n = 50,sd = 1,mean = 5))
Allocation
Eco2<-abs(rnorm(n = 50,sd = 2,mean = 400))
Allocation<-Eco2*0.00004+abs(rnorm(n = 50,sd = 1,mean = 5))
FungalDiversity<-Allocation*0.001*seq(0.01,1,.02)+(rnorm(n = 50,sd = 1,mean = 0.00025))
PSF=FungalDiversity*0.04+abs(rnorm(n = 50,sd =0.5,mean = 0.00001))
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A',size='PSF')
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A',size=PSF)
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
FungalDiversity
FungalDiversity<-abs(Allocation*0.001*seq(0.01,1,.02)+(rnorm(n = 50,sd = 1,mean = 0.00025)))
FungalDiversity
Allocation*0.001
seq(0.01,1,.02)
0.8/50
length(seq(0.01,0.8,.02))
length(seq(0.01,0.8,.017))
length(seq(0.01,0.8,.0165))
length(seq(0.01,0.8,.0166))
length(seq(0.01,0.8,.0167))
length(seq(0.01,0.8,.0168))
length(seq(0.01,0.8,.0169))
length(seq(0.01,0.8,.01699))
length(seq(0.01,0.8,.017))
length(seq(0.01,0.8,.016))
FungalDiversity<-abs(Allocation*0.001*seq(0.01,0.8,.016)+(rnorm(n = 50,sd = 1,mean = 0.00025)))
FungalDiversity
rnorm(n = 50,sd = 1,mean = 0.00025))
(rnorm(n = 50,sd = 1,mean = 0.00025)))
rnorm(n = 50,sd = 1,mean = 0.00025)
dim(rnorm(n = 50,sd = 1,mean = 0.00025))
hist(rnorm(n = 50,sd = 1,mean = 0.00025))
hist(rnorm(n = 50,sd = 0.5,mean = 0.00025))
rsample(seq(0,0.5,0.002))
sample(seq(0,0.5,0.002))
sample(seq(0,0.5,0.01))
sample(seq(0,0.5,0.012))
sample(seq(0,0.5,0.01))
sample(seq(0,0.5,0.011))
length(sample(seq(0,0.5,0.011))
)
length(sample(seq(0,0.5,0.01))
)
length(sample(seq(0.01,0.5,0.01))
)
sample(seq(0.01,0.5,0.01))
FungalDiversity<-abs(Allocation*0.001*seq(0.01,0.8,.016)+sample(seq(0.01,0.5,0.01)))
PSF=FungalDiversity*0.04+abs(rnorm(n = 50,sd =0.5,mean = 0.00001))
fig <- plot_ly( x = ~Eco2, y = ~Allocation, z = ~FungalDiversity, color = '#BF382A',size=PSF)
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'eCO2'),
yaxis = list(title = 'Carbon allocation to Root exudates'),
zaxis = list(title = 'Fungal Diversity')))
fig
plot_ly(x = ~Eco2, y = ~Allocation, z = ~FungalDiversity,  size = PSF, colors = 'red',
marker = list(symbol = 'circle', sizemode = 'diameter'))
Data <- read.csv("C:/Users/Sara Colom/Desktop/ForGlo/2017_Arecibo_SurveyMod.csv", na.strings=".")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(cowplot)
library(dplyr)
library(tidyr)
library(naniar)
library(plotly)
Data <- read.csv("C:/Users/Sara Colom/Desktop/ForGlo/2017_Arecibo_SurveyMod.csv", na.strings=".")
head(Data)
dim(Data)
str(Data)
vis_miss(Data)
Town<-ggplot(Data)+
geom_bar(aes(Barrio),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Barrio")+
ggtitle("Barrio")+
theme(plot.title=element_text(hjust=0.5))
ggplotly(Town)
Furniture<-ggplot(Data)+
geom_bar(aes(Furniture),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Presence/Absence")+
ggtitle("Furniture")+
theme(plot.title=element_text(hjust=0.5))
ggplotly(Furniture)
Bldg_use <-ggplot(Data)+
geom_bar(aes(Bldg_use ),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Building Type")+
ggtitle("Building Use")+
theme(plot.title=element_text(hjust=0.5),axis.text.x = element_text(angle=90))
ggplotly(Bldg_use)
Ruins <-ggplot(Data)+
geom_bar(aes(Ruins),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Ruin Type")+
ggtitle("Ruins")+
theme(plot.title=element_text(hjust=0.5),axis.text.x = element_text(angle=90))
ggplotly(Ruins)
Floors <-ggplot(Data)+
geom_bar(aes(Floors),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Floor Type")+
ggtitle("Floors")+
theme(plot.title=element_text(hjust=0.5),axis.text.x = element_text(angle=90))
ggplotly(Floors)
# Count the number of observations per 'Barrio'
BarrioCount<-data.frame(table(Data$Barrio))
colnames(BarrioCount)<-c("Barrio","BarrioFreq")
kableExtra::kable(BarrioCount)
Dat<-merge(BarrioCount,Data)
BarrCountPoint<-ggplot(Dat)+
geom_point(aes(X,Y,color=Barrio,size=BarrioFreq),alpha=0.5)+
theme_classic()
BarrCountPoint
MarRoofBarrio<-Data%>%
group_by(Barrio)%>%
count(Marq_Roof)
kableExtra::kable(MarRoofBarrio)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(cowplot)
library(dplyr)
library(tidyr)
library(naniar)
library(plotly)
Data <- read.csv("C:/Users/Sara Colom/Desktop/ForGlo/2017_Arecibo_SurveyMod.csv", na.strings=".")
head(Data)
dim(Data)
str(Data)
vis_miss(Data)
Town<-ggplot(Data)+
geom_bar(aes(Barrio),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Barrio")+
ggtitle("Barrio")+
theme(plot.title=element_text(hjust=0.5))
ggplotly(Town)
Furniture<-ggplot(Data)+
geom_bar(aes(Furniture),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Presence/Absence")+
ggtitle("Furniture")+
theme(plot.title=element_text(hjust=0.5))
ggplotly(Furniture)
Bldg_use <-ggplot(Data)+
geom_bar(aes(Bldg_use ),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Building Type")+
ggtitle("Building Use")+
theme(plot.title=element_text(hjust=0.5),axis.text.x = element_text(angle=90))
ggplotly(Bldg_use)
Ruins <-ggplot(Data)+
geom_bar(aes(Ruins),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Ruin Type")+
ggtitle("Ruins")+
theme(plot.title=element_text(hjust=0.5),axis.text.x = element_text(angle=90))
ggplotly(Ruins)
Floors <-ggplot(Data)+
geom_bar(aes(Floors),stat="count")+
theme_classic()+
ylab("Number of samples")+
xlab("Floor Type")+
ggtitle("Floors")+
theme(plot.title=element_text(hjust=0.5),axis.text.x = element_text(angle=90))
ggplotly(Floors)
# Count the number of observations per 'Barrio'
BarrioCount<-data.frame(table(Data$Barrio))
colnames(BarrioCount)<-c("Barrio","BarrioFreq")
kableExtra::kable(BarrioCount)
Dat<-merge(BarrioCount,Data)
BarrCountPoint<-ggplot(Dat)+
geom_point(aes(X,Y,color=Barrio,size=BarrioFreq),alpha=0.5)+
theme_classic()
BarrCountPoint
MarRoofBarrio<-Data%>%
group_by(Barrio)%>%
count(Marq_Roof)
kableExtra::kable(MarRoofBarrio)
